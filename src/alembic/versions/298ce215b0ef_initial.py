"""Initial

Revision ID: 298ce215b0ef
Revises:
Create Date: 2025-07-03 17:18:54.288932

"""

from datetime import datetime, timedelta
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "298ce215b0ef"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    doctors_table = op.create_table(
        "doctors",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("specialization", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("experience_years", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )

    appointments_table = op.create_table(
        "appointments",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("doctor_id", sa.BigInteger(), nullable=False),
        sa.Column("patient_name", sa.String(), nullable=False),
        sa.Column("patient_phone", sa.String(), nullable=True),
        sa.Column(
            "appointment_date",
            sa.DateTime(timezone=True),
            nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )

    op.bulk_insert(
        doctors_table,
        [
            {
                "name": "doctor 1",
                "specialization": "specialization 1",
                "phone": "+79001234567",
                "experience_years": 15,
            },
            {
                "name": "doctor 2",
                "specialization": "specialization 2",
                "phone": "+79001234568",
                "experience_years": 25,
            },
        ],
    )

    op.bulk_insert(
        appointments_table,
        [
            {
                "doctor_id": 1,
                "patient_name": "pacient 1",
                "patient_phone": "+79991122334",
                "appointment_date": datetime.now(),
            },
            {
                "doctor_id": 2,
                "patient_name": "pacient 2",
                "patient_phone": "+79991122335",
                "appointment_date": datetime.now() + timedelta(minutes=60),
            },
        ],
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DELETE FROM appointments")
    op.execute("DELETE FROM doctors")

    op.drop_table("appointments")
    op.drop_table("doctors")
    # ### end Alembic commands ###
